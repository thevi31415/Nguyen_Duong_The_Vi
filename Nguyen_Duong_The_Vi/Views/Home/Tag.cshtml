﻿@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model X.PagedList.IPagedList<Post>
@{
    Layout = "User_Layout";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Nguyen Duong The Vi</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="TemplateMo">
    <title>First Portfolio Bootstrap 5 Theme</title>
</head>




<div class="container mx-auto p-8" style="margin-left: 220px;">
    <div class="space-y-2 pb-8 pt-6 md:space-y-5">
        <h1 class="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-6xl md:leading-14">Tag "@ViewBag.NameTags" </h1>
    </div>


    <div class="flex sm:space-x-24">
        <div class="hidden h-full max-h-screen min-w-[280px] max-w-[280px] flex-wrap overflow-auto rounded bg-gray-50 pt-5 shadow-md dark:bg-gray-900/70 dark:shadow-gray-800/40 sm:flex">
            <div class="px-6 py-4">
                <h3 class="font-bold uppercase text-primary-500">All Posts</h3>
                <ul>




                   @*  @foreach (var category in (List<CategoryViewModel>)ViewBag.categoryWithPostCountList)
                    {
                        string colorClass = "bg-pink-100 text-pink-800";

                        if (category.TITLECATEGORY.StartsWith("A", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("B", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("C", StringComparison.OrdinalIgnoreCase))
                        {
                            colorClass = "bg-blue-100 text-blue-800";
                        }
                        else if (category.TITLECATEGORY.StartsWith("D", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("E", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("F", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("G", StringComparison.OrdinalIgnoreCase))
                        {
                            colorClass = "bg-gray-100 text-gray-800";
                        }
                        else if (category.TITLECATEGORY.StartsWith("H", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("I", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("J", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("K", StringComparison.OrdinalIgnoreCase))
                        {
                            colorClass = "bg-red-100 text-red-800";
                        }
                        else if (
                        category.TITLECATEGORY.StartsWith("L", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("M", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("N", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("O", StringComparison.OrdinalIgnoreCase))
                        {
                            colorClass = "bg-green-100 text-green-800";
                        }
                        else if (category.TITLECATEGORY.StartsWith("P", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("Q", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("R", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("S", StringComparison.OrdinalIgnoreCase))

                        {
                            colorClass = "bg-yellow-100 text-yellow-800";
                        }
                        else if (
                        category.TITLECATEGORY.StartsWith("T", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("U", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("V", StringComparison.OrdinalIgnoreCase))

                        {
                            colorClass = "bg-indigo-100 text-indigo-800";
                        }
                        else if (category.TITLECATEGORY.StartsWith("W", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("X", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("Y", StringComparison.OrdinalIgnoreCase) ||
                        category.TITLECATEGORY.StartsWith("Z", StringComparison.OrdinalIgnoreCase))
                        {
                            colorClass = "bg-purple-100 text-purple-800";
                        }

                        <li class="my-3">
                            <a class="@(colorClass) text-sm font-medium me-2 px-2.5 py-0.5 rounded dark:@(colorClass.Replace("bg-", "dark:bg-")).dark:text-@(colorClass.Replace("bg-", "dark:text-"))" style="font-size:22px;">
                                @category.TITLECATEGORY (@category.PostCount)
                            </a>
                        </li>
                    }  *@






                </ul>
            </div>
        </div>
        <div class="full-width-article">
            <ul>
                <ol class="relative border-s border-gray-200 dark:border-gray-700">
                    @foreach (var post in Model)
                    {
                        <li class="mb-0 ms-4  border-width-100">
                            <div class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div>
                            <time class="mb-1 text-sm font-medium  leading-none text-gray-500 dark:text-gray-500" style="font-size: 20px;">

                                @post.PUBLISHED.ToString("MMMM dd, yyyy")

                            </time>
                        <li class="py-5" style="margin-left: 15px">
                            <article class="full-width-article flex flex-col border rounded-lg p-4 space-y-2 xl:space-y-0">
                                <dl>
                                    <dt class="sr-only">Published on</dt>
                                    <dd class="text-base font-medium leading-6 text-gray-500 dark:text-gray-400">

                                    </dd>
                                </dl>
                                <div class="space-y-3">
                                    <div>
                                        <h2 class="text-2xl font-bold leading-8 tracking-tight">
                                            <a class="hover-title text-gray-900 dark:text-gray-100" asp-controller="Home" asp-action="BaiDang" asp-route-id="@post.ID">
                                                    @post.TITLE
                                                  
                                            </a>
                                        </h2>

                                        <div class="flex flex-wrap mt-3 mb-3">
                                                @if (true)
                                                {
                                                    foreach (var postCategory in post.PostCategories)
                                                    {
                                                        var categoryTitle = postCategory.Category?.TITLE;
                                                        var categoryClass = "bg-blue-100 text-blue-800 text-120 font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-blue-900 dark:text-blue-300";

                                                        if (!string.IsNullOrEmpty(categoryTitle))
                                                        {
                                                            var firstChar = categoryTitle.ToUpper()[0];

                                                            if (firstChar >= 'A' && firstChar <= 'C')
                                                            {
                                                                categoryClass = "bg-blue-100 text-blue-800 text-120 font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-blue-900 dark:text-blue-300";
                                                            }
                                                            else if (firstChar >= 'D' && firstChar <= 'G')
                                                            {
                                                                categoryClass = "bg-gray-100 text-gray-800 text-120 font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-gray-700 dark:text-gray-300";
                                                            }
                                                            else if (firstChar >= 'H' && firstChar <= 'K')
                                                            {
                                                                categoryClass = "bg-red-100 text-red-800 text-120 font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-red-900 dark:text-red-300";
                                                            }
                                                            else if (firstChar >= 'L' && firstChar <= 'O')
                                                            {
                                                                categoryClass = "bg-green-100 text-green-800 text-120 font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-green-900 dark:text-green-300";
                                                            }
                                                            else if (firstChar >= 'P' && firstChar <= 'S')
                                                            {
                                                                categoryClass = "bg-yellow-100 text-yellow-800 text-120 font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-yellow-900 dark:text-yellow-300";
                                                            }
                                                            else if (firstChar >= 'T' && firstChar <= 'V')
                                                            {
                                                                categoryClass = "bg-indigo-100 text-indigo-800 text-120 font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-indigo-900 dark:text-indigo-300";
                                                            }
                                                            else if (firstChar >= 'W' && firstChar <= 'Z')
                                                            {
                                                                categoryClass = "bg-purple-100 text-purple-800 text-120 font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-purple-900 dark:text-purple-300";
                                                            }
                                                            else
                                                            {
                                                                categoryClass = "bg-pink-100 text-pink-800 text-120 font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-pink-900 dark:text-pink-300";
                                                            }
                                                        }

                                                    <a class="@categoryClass" asp-controller="Home" asp-action="Tag" asp-route-id="@postCategory.IDCATEGORY">
                                                            @categoryTitle
                                                    </a>

                                                    }
                                                }

                                        </div>

                                        <div class="prose max-w-none text-gray-500 dark:text-gray-400">
                                                @post.SUMMARY
                                        </div>
                                        <div class="flex items-center text-gray-500 dark:text-gray-400">
                                            <span class="me-4">
                                                <i class="bi bi-eye-fill text-blue-500"></i> @post.VIEW
                                            </span>
                                            <span>
                                                <i class="bi bi-heart-fill text-red-500"></i> @post.LIKE
                                            </span>
                                        </div>
                                    </div>
                            </article>
                        </li>
                        </li>
                    }
                </ol>
                <div class="pagination mx-auto">

                    <ul class="flex items-center -space-x-px h-8 text-sm">
                        <li>
                            @if (Model.HasPreviousPage)
                            {
                                <a href="@Url.Action("Blog", new { page = Model.PageNumber - 1, searchString = ViewData["CurrentFilter"], searchBy = "TITLE"  })" class="flex items-center justify-center px-3 h-8 ms-0 leading-tight text-gray-500 bg-white border border-e-0 border-gray-300 rounded-s-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
                                    <span class="sr-only">Previous</span>
                                    <svg class="w-2.5 h-2.5 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4" />
                                    </svg>
                                </a>
                            }
                        </li>

                        @for (var i = 1; i <= Model.PageCount; i++)
                        {
                            <li>
                                <a href="@Url.Action("Tag", new { page = i  })" class="flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">@i</a>
                            </li>
                        }

                        <li>
                            @if (Model.HasNextPage)
                            {
                                <a href="@Url.Action("Tag", new { page = Model.PageNumber + 1  })" class="flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 rounded-e-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
                                    <span class="sr-only">Next</span>
                                    <svg class="w-2.5 h-2.5 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4" />
                                    </svg>
                                </a>
                            }
                        </li>
                    </ul>
                </div>
                </ul>

        </div>

    </div>
</div>
 </div>





</html>
<style>
    /* Định dạng khi không hover */
    .hover-title {
        color: #1a202c; /* Màu mặc định, bạn có thể thay đổi theo nhu cầu */
        transition: color 0.3s ease; /* Hiệu ứng chuyển đổi màu trong 0.3 giây */
    }

        /* Định dạng khi hover */
        .hover-title:hover {
            color: #e53e3e; /* Màu đỏ khi hover */
        }
</style>
<style>
    .full-width-article {
        width: 100vh;
    }

    .search_bar {
        width: 65vw; /* Thay đổi giá trị này theo nhu cầu của bạn */
    }

</style>